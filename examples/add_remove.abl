/* Copyright 2017 OpenABL Contributors
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License. */

agent Agent {
  position float2 pos;
}

param int num_agents = 1000;

float addProbability = 0.01;
float removeProbability = 0.01;

float env_size = 10;

environment {
  max: float2(env_size),
  granularity: 0.1
}

step step_fn(Agent in -> out) {
  out.pos = clamp(in.pos + random(float2(-0.01), float2(0.01)), float2(env_size));

  if (random(1) < addProbability) {
    add(Agent { pos: in.pos });
  }

  if (random(1) < removeProbability) {
    removeCurrent();
  }
}

void main() {
  for (int i : 0..num_agents) {
    add(Agent { pos: random(float2(env_size)) });
  }
  simulate(100) { step_fn }
}
